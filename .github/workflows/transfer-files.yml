name: "传输部署文件到服务器"

on:
  workflow_dispatch:
    inputs:
      force_transfer:
        description: '强制传输所有文件(覆盖)'
        required: false
        default: 'false'
        type: boolean
  workflow_call:
    inputs:
      force_transfer:
        description: '强制传输所有文件'
        required: false
        default: false
        type: boolean

env:
  PROJECT_NAME: MechanicEndWorld2 # 项目名称
  PROJECT_DIR: /1/MechanicEndWorld2  #服务器项目目录
  SERVER_PORT: 22

jobs:
  transfer-files:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码以获取部署文件
      - name: 📦 检出代码
        uses: actions/checkout@v4

      # Step 2: 验证部署文件
      - name: 🔍 验证部署文件
        run: |
          echo "📁 检查本地部署文件..."
          ls -la .container/prod/
          ls -la .env
          
          # 检查必要文件是否存在
          required_files=(
            ".container/prod/docker-compose.prod.yml"
            ".container/prod/.env.production"
            ".container/prod/Caddyfile"
            ".env"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ 缺少必要文件: $file"
              exit 1
            else
              echo "✅ 文件存在: $file"
            fi
          done

      # Step 3: 传输部署文件到服务器
      - name: 📁 传输部署文件到服务器
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ env.SERVER_PORT || '22'}}
          source: ".container/prod/*,.env"
          target: ${{ env.PROJECT_DIR }}
          strip_components: 0
          debug: true # 显示详细日志
          timeout: 3m # 增加超时时间
          overwrite: ${{ github.event.inputs.force_transfer == 'true' }}

      # Step 4: 验证服务器文件
      - name: 🔍 验证服务器文件
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ env.SERVER_PORT }}
          script: |
            set -euo pipefail
            cd ${{ env.PROJECT_DIR }} || { echo "❌ 目录不存在"; exit 1; }
            
            echo "📁 验证服务器文件结构..."
            ls -la .container/prod/
            ls -la .env
            
            # 检查关键文件
            echo "🔍 检查关键配置文件..."
            if [ -f ".container/prod/docker-compose.prod.yml" ]; then
              echo "✅ docker-compose.prod.yml 存在"
            else
              echo "❌ docker-compose.prod.yml 不存在"
              exit 1
            fi
            
            if [ -f ".container/prod/Caddyfile" ]; then
              echo "✅ Caddyfile 存在"
            else
              echo "❌ Caddyfile 不存在"
              exit 1
            fi
            
            if [ -f ".env" ]; then
              echo "✅ .env 存在"
            else
              echo "❌ .env 不存在"
              exit 1
            fi
            
            echo "🎉 文件传输验证完成！"
